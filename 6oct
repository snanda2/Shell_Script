# ... (previous code)

# Create an Excel writer object for the output file using the xlsxwriter engine
excel_filename = "jira_issues_for_assignees.xlsx"
with pd.ExcelWriter(excel_filename, engine='xlsxwriter', datetime_format='yyyy-mm-dd') as writer:
    # Save all issues to the "all issues" sheet
    df.to_excel(writer, sheet_name='all issues', index=False)

    # Save assignee counts to a new sheet
    assignee_counts_df.to_excel(writer, sheet_name='assignee counts', index=False)

    # Get the workbook and the "assignee counts" worksheet
    workbook = writer.book
    worksheet = writer.sheets['assignee counts']

    # Create a number format with percentage and two decimal places
    percentage_format = workbook.add_format({'num_format': '0.00%'})

    # Apply the percentage format to the "Resource Utilization" column
    worksheet.set_column('C:C', None, percentage_format)

# ... (rest of the code for sending the email)

# ...


======================
# Define your custom JQL query
custom_jql_query = 'project = YOUR_PROJECT_KEY AND status = "In Progress"'

# ...

# Use the custom JQL query
jql_query = custom_jql_quer
=========================================
# ... (previous code)

# Calculate assignee counts
assignee_counts = df['Assignee'].value_counts().reset_index()
assignee_counts.columns = ['Assignee', 'Count']

# Create a DataFrame for assignee counts
assignee_counts_df = pd.DataFrame(assignee_counts)

# Create a new column for "Resource Utilization" (percentage)
assignee_counts_df['Resource Utilization'] = (assignee_counts_df['Count'] / len(df)) * 100

# Format the "Resource Utilization" column as a percentage with two decimal places
assignee_counts_df['Resource Utilization'] = assignee_counts_df['Resource Utilization'].apply(lambda x: '{:.2f}%'.format(x))

# Create an Excel writer object for the output file
excel_filename = "jira_issues_for_assignees.xlsx"

# Save all issues to the "all issues" sheet
df.to_excel(excel_filename, sheet_name='all issues', index=False)

# Create a Pandas Excel writer object with openpyxl
with pd.ExcelWriter(excel_filename, engine='openpyxl', mode='a', datetime_format='yyyy-mm-dd') as writer:
    # Save assignee counts to a new sheet
    assignee_counts_df.to_excel(writer, sheet_name='assignee counts', index=False)

# ... (rest of the code for sending the email)

# ...


